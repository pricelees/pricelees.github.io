{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Interceptor","result":{"pageContext":{"currentCategory":"Interceptor","categories":["All","level4","aws","level2","Spring","API","Specification","JsonFormat","ObjectMapper","Interceptor","Exception","Welcome"],"edges":[{"node":{"id":"64d93618-5412-5059-992e-0b9382425ab1","excerpt":"배경 우아한테크코스의 두 번째 미션에서의 새로운 요구사항은 JWT를 이용해 로그인 기능을 구현하고, 역할에 따라 접근 권한을 다르게 설정하는 것이었습니다.\n요구사항에 명시된 것은 로그인 된 회원이 직접 예약을 추가하는 기능 구현과 관리자 페이지 접근을 제한하는 것이었는데요, 이 두 가지와 더불어 관리자와 회원의 역할을 조금 더 명확하게 나누기 위해 Spring Interceptor를 이용했던 경험을 기록하고자 합니다. 글에서는 스프링 인터셉터를 두 가지 방식으로 구현합니다. 먼저 경로를 지정하는 방법을 사용하여 구현한 후, 커스텀 어노테이션을 이용한 방법으로 개선해보겠습니다. 또한, ArgumentResolver를 사용하는 관점에 대해서도 작성하겠습니다. API 분류 우선, 현재 있는 API를 역할별로 구분해볼 필요가 있을 것 같습니다. 1. 로그인을 하지 않아도 접근 가능 Endpoint HTTP Method 기능 /login POST 로그인 요청 /themes/weekly GE…","fields":{"slug":"/woowacourse/level2/Interceptor를_이용한_권한_구분/"},"frontmatter":{"categories":"level2 Spring Interceptor","title":"회원 역할에 따른 API 접근 - Spring Interceptor","date":"June 24, 2024"}},"next":{"fields":{"slug":"/woowacourse/level2/스프링_입력에서의_예외_처리_여정/3/"}},"previous":{"fields":{"slug":"/woowacourse/level2/날짜와_시간_직렬화_및_역직렬화/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}