{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/ObjectMapper","result":{"pageContext":{"currentCategory":"ObjectMapper","categories":["All","level4","aws","deregister","wait","level2","Spring","API","Specification","JsonFormat","ObjectMapper","Interceptor","Exception","Welcome"],"edges":[{"node":{"id":"dee8b1ee-32ce-50ad-8fb6-a9439ac08f45","excerpt":"배경 우아한테크코스의 세 번째 스프링 미션을 진행하며 코드 리뷰를 받던 도중 리뷰어께서 좋은 의견을 공유해 주셨습니다. 의견은 기존의 을 중복해서 사용하는 코드를 ObjectMapper를 만들어 해결하는 것이었는데요, 여기에 더해서, 미션을 하며 그냥 대략적으로만 알고 사용했던 @JsonFormat에 대해서도 알아보는 과정을 기록하고자 합니다. @JsonFormat 이란? 공식 문서에 따르면, JsonFormat을 다음과 같이 설명합니다. General-purpose annotation used for configuring details of how values of properties are to be serialized. Unlike most other Jackson annotations, annotation does not have specific universal interpretation: instead, effect depends on datatype of propert…","fields":{"slug":"/woowacourse/level2/de_serialize_datetime/"},"frontmatter":{"categories":"level2 Spring JsonFormat ObjectMapper","title":"날짜와 시간의 직렬화 & 역직렬화 시도 - JsonFormat, ObjectMapper","date":"June 26, 2024"}},"next":{"fields":{"slug":"/woowacourse/level2/interceptor/"}},"previous":{"fields":{"slug":"/woowacourse/level2/spring_specification/1/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}